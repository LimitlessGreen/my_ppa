# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ pre_upload ]
    paths-ignore:
    - '.github/workflows/**'
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
  
    - name: Import SignKey
      env:
        SignKey: ${{ secrets.SIGNKEY }}
      run: echo ${SignKey} | xxd -r -p - | gpg --import -
        
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        branch: pre_upload
        path: pre_upload
        lfs: true
        
    - name: Prepare Packages for PPA
      env:
        FingerPrint: 6C8B868673BB4320
      run: |
        cd pre_upload/Ubuntu
        # export public key
        gpg --armor --export "${FingerPrint}" > KEY.gpg
        # Packages & Packages.gz
        dpkg-scanpackages --multiversion . > Packages
        gzip -k -f Packages

        # Release, Release.gpg & InRelease
        apt-ftparchive release . > Release
        gpg --default-key "${FingerPrint}" -abs -o - Release > Release.gpg
        gpg --default-key "${FingerPrint}" --clearsign -o - Release > InRelease
        
    - uses: actions/checkout@v2
      with:
        branch: master
        path: master
        lfs: true
        fetch-depth: 0
    - name: Publish PPA
      run: |
        cd master
        git checkout master
        cp -rf $GITHUB_WORKSPACE/pre_upload/Ubuntu $GITHUB_WORKSPACE/master/
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m"[GitHub Actions] Update PPA"
        git push        

      
      
      
